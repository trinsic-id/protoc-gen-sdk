package lang_types

import (
	"fmt"
	"strings"

	pgs "github.com/lyft/protoc-gen-star/v2"
)

type GolangGenerator struct {
}

func (g GolangGenerator) MethodReturnType(method pgs.Method) string {
	t := goMessageType(method.Output())
	t = fmt.Sprintf("*%s.%s", lastPackageNamePart(method), t)
	if method.ServerStreaming() {
		return fmt.Sprintf("%s.%s_%sClient", lastPackageNamePart(method), method.Service().Name().UpperCamelCase(), method.Name().UpperCamelCase())
	}
	return t
}

func (g GolangGenerator) DocComment(method pgs.Method) string {
	commentLines := deleteEmpty(strings.Split(method.SourceCodeInfo().LeadingComments(), "\n"))

	isDep, msgDep := SdkDeprecated(method)
	isExp, msgExp := SdkExperimental(method)
	if isDep {
		commentLines = append([]string{fmt.Sprintf("Deprecated: %s", msgDep)}, commentLines...)
	}
	if isExp {
		commentLines = append([]string{fmt.Sprintf("Deprecated: %s", msgExp)}, commentLines...)
	}

	if len(commentLines) == 0 {
		return ""
	}
	return fmt.Sprintf("// %s %s", method.Name().UpperCamelCase(), strings.Join(commentLines, "\n//"))
}

func (g GolangGenerator) AsyncModifier(method pgs.Method) string {
	return ""
}

func (g GolangGenerator) AwaitModifier(method pgs.Method) string {
	return ""
}

func (g GolangGenerator) MethodType(message pgs.Message, streaming bool) string {
	return ""
}

func (g GolangGenerator) BuildMetadata(method pgs.Method) string {
	if SdkAnonymous(method) {
		return "GetMetadataContext(userContext, nil)"
	}
	return "GetMetadataContext(userContext, request)"
}

func (g GolangGenerator) MethodArguments(method pgs.Method) string {
	if SdkNoArguments(method) {
		return ""
	} else {
		return fmt.Sprintf(", request *%s", goMethodParamType(method))
	}
}

func (g GolangGenerator) DefaultRequestObject(method pgs.Method) string {
	if SdkNoArguments(method) {
		return fmt.Sprintf("request := &%s{};\n", goMethodParamType(method))
	}
	return ""
}

func (g GolangGenerator) Annotations(method pgs.Method) string {
	return ""
}

func (g GolangGenerator) StructPointer(method pgs.Method) string {
	serviceLowerName := method.Service().Name().LowerCamelCase().String()
	return fmt.Sprintf("%s *%sBase", g.StructPointerVar(method), serviceLowerName)
}

func (g GolangGenerator) StructPointerVar(method pgs.Method) string {
	serviceLowerName := lastPackageNamePart(method)
	return serviceLowerName[0:1]
}

func GetGolangGenerator() LanguageGenerator {
	return GolangGenerator{}
}

func goMessageType(entity EntityWithParent) string {
	names := make([]string, 0)
	outer := entity
	ok := true
	for ok {
		name := outer.Name().String()
		names = append([]string{strings.Title(name)}, names...)
		outer, ok = outer.Parent().(pgs.Message)
	}
	return fmt.Sprintf("%s", strings.Join(names, "."))
}

func lastPackageNamePart(method pgs.Method) string {
	nameParts := strings.Split(method.File().Descriptor().GetOptions().GetGoPackage(), "/")
	return strings.ToLower(nameParts[len(nameParts)-1])
}

func goMethodParamType(method pgs.Method) string {
	t := goMessageType(method.Input())
	return fmt.Sprintf("%s.%s", lastPackageNamePart(method), t)
}

const GoServiceInterfaceTpl = `// BEGIN Interface Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: {{ .TargetPath }}
{{ range .File.Services }}{{ range .Methods }}{{ if SdkTemplateGenerate . }}
    {{ GolangDocComment . }} 
    {{ .Name.UpperCamelCase }}(userContext context.Context{{ GolangMethodArguments . }}) ({{ GolangMethodReturnType . }}, error){{ end }}{{ end }}
{{ end }}
// END Interface Code generated by protoc-gen-trinsic. DO NOT EDIT.`

const GoServiceImplTpl = `// BEGIN Implementation Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: {{ .TargetPath }}
{{ range .File.Services }}{{ range .Methods }}{{ if SdkTemplateGenerate . }}
{{ GolangDocComment . }}
func ({{ GolangStructPointer . }}) {{ .Name.UpperCamelCase }}(userContext context.Context{{ GolangMethodArguments . }}) ({{ GolangMethodReturnType . }}, error) {
    {{ GolangDefaultRequestObject . }}md, err := {{ GolangStructPointerVar . }}.{{ GolangBuildMetadata . }}
    if err != nil {
        return nil, err
    }
    response, err := {{ GolangStructPointerVar . }}.client.{{ .Name.UpperCamelCase }}(md, request)
    if err != nil {
		return nil, err
	}
	return response, nil
}{{ end }}{{ end }}{{ end }}
// END Implementation Code generated by protoc-gen-trinsic. DO NOT EDIT.`

const GoDocTpl = `// BEGIN Doc Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: {{ .TargetPath }}
{{ range .File.Services }}
// {{ DocCreateServiceInjection . }}
// {{ DocMethodInjectionEnd }}
{{ range .Methods }}
// {{ DocMethodInjection . }}
// {{ DocMethodInjectionEnd }}
{{ end }}{{ end }}
// END Doc Code generated by protoc-gen-trinsic. DO NOT EDIT.`
