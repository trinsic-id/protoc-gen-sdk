package lang_types

import (
	"fmt"
	pgs "github.com/lyft/protoc-gen-star"
	"strings"
)

func PythonMessageType(entity EntityWithParent) string {
	names := make([]string, 0)
	outer := entity
	ok := true
	for ok {
		name := outer.Name().String()
		names = append([]string{strings.Title(name)}, names...)
		outer, ok = outer.Parent().(pgs.Message)
	}
	return fmt.Sprintf("%s", strings.Join(names, "."))
}

func PythonMethodReturnType(method pgs.Method) string {
	t := PythonMessageType(method.Output())
	if method.ServerStreaming() {
		return fmt.Sprintf("AsyncIterator[%s]", t)
	}
	return t
}

func PythonDocComment(method pgs.Method) string {
	commentLines := deleteEmpty(strings.Split(method.SourceCodeInfo().LeadingComments(), "\n"))
	if len(commentLines) == 0 {
		return "\"\"\" \"\"\""
	}
	return fmt.Sprintf("\"\"\"\n       %s\n        \"\"\"", strings.Join(commentLines, "\n        "))
}

func PythonBuildMetadata(method pgs.Method) string {
	s := "(request)"
	if SdkAnonymous(method) {
		s = "()"
	}
	return "self.build_metadata" + s
}

func PythonMethodArguments(method pgs.Method) string {
	if SdkNoArguments(method) {
		return "self"
	} else {
		return fmt.Sprintf("self, *, request: %s", MethodParamType(method))
	}
}

func PythonDefaultRequestObject(method pgs.Method) string {
	if SdkNoArguments(method) {
		return fmt.Sprintf("request = %s()", MethodParamType(method))
	}
	return ""
}

const PythonServiceTpl = `# BEGIN Code generated by protoc-gen-trinsic. DO NOT EDIT.
# target: {{ .TargetPath }}
{{ range .File.Services }}{{ range .Methods }}{{ if SdkTemplateGenerate . }}
    async def {{ .Name.LowerSnakeCase }}({{ PythonMethodArguments . }}) -> {{ PythonMethodReturnType . }}:
        {{ PythonDocComment . }}
        {{ PythonDefaultRequestObject . }}
        return await self.client.{{ .Name.LowerSnakeCase }}(request, metadata={{ PythonBuildMetadata . }})
    {{ end }}{{ end }}
{{ end }}
# END Code generated by protoc-gen-trinsic. DO NOT EDIT.`
